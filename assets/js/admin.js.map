{"version":3,"sources":["admin.js","datepicker.js","media-uploader.js"],"names":["$","datepickers_init","$datepickers","each","name","this","find","attr","option_functions","options","value","indexOf","window","datepicker","length","jQuery","media_frame","$current_uploader","wp","media","frames","meta_image_frame","title","on","media_attachment","state","get","first","toJSON","val","id","hide","show","data","url","html","document","e","preventDefault","closest","open","siblings","$image_preview","$media_url","mcg_instantiate_media_uploaders"],"mappings":"AAAA,cCAA,SAAYA,GAGRA,EAAG,WAiBC,QAASC,GAAkBC,GAEvBA,EAAaC,KAAM,WAEf,GAAIC,GAAOJ,EAAGK,MAAOC,KAAM,wBAAyBC,KAAM,QACtDC,GAAoB,aAAc,gBAAiB,gBAAiB,oBAAqB,UAAW,YACpGC,IAGJT,GAAEG,KAAMM,EAAS,SAAUL,EAAMM,GACxBF,EAAiBG,QAASP,UAC3BK,EAASL,GAASQ,OAAQF,MAIlCD,EAAA,SAAsB,UAAYL,EAAO,KACzCK,EAAA,UAAuB,SAEvBT,EAAGK,MAAOC,KAAM,iCAAkCO,WAAYJ,KAjCtE,GAAIP,GAAeF,EAAG,wBAEjBE,GAAaY,QAEdb,EAAkBC,MAqCzBa,QCzCL,SAAYf,GAGXY,OAAA,gCAA4C,WAE3C,GAAII,GAAaC,CAEVC,IAAGC,QAIVH,EAAcE,GAAGC,MAAMC,OAAOC,iBAAmBH,GAAGC,OACnDG,MAAO,iBAGRN,EAAYO,GAAI,SAAU,WAEzB,GAAIC,GAAmBR,EAAYS,QAAQC,IAAK,aAAcC,QAAQC,QAQtE,QANAX,EAAkBX,KAAM,aAAcuB,IAAIL,EAAiBM,IAE3Db,EAAkBX,KAAM,iBAAkByB,OAC1Cd,EAAkBX,KAAM,iBAAkB0B,OAGjCf,EAAkBgB,KAAM,SAChC,IAAK,QACJhB,EAAkBX,KAAM,kBAAmBC,KAAM,MAAOiB,EAAiBU,IACzE,MAED,SACCjB,EAAkBX,KAAM,cAAe6B,KAAMX,EAAiBU,QAMjElC,EAAGoC,UAAWb,GAAI,QAAS,oCAAqC,SAAUc,GAEzEA,EAAEC,iBAEFrB,EAAoBjB,EAAGK,MAAOkC,QAAS,sBAE5BtB,GAAkBgB,KAAM,OAEnCjB,GAAYwB,SAWbxC,EAAGoC,UAAWb,GAAI,QAAS,oCAAqC,SAAUc,GASzE,OAPArC,EAAGK,MAAOoC,SAAU,iBAAkBT,OACtChC,EAAGK,MAAO0B,OACV/B,EAAGK,MAAOoC,SAAU,aAAcZ,IAAK,IAEvCZ,EAAoBjB,EAAGK,MAAOkC,QAAS,uBAG9BtB,EAAkBgB,KAAM,SAChC,IAAK,QAEJ,GAAIS,GAAiB1C,EAAGK,MAAOoC,SAAU,iBACzCC,GAAenC,KAAM,MAAOmC,EAAeT,KAAM,gBAAmB,GAEpE,MAED,SAEC,GAAIU,GAAa3C,EAAGK,MAAOoC,SAAU,aACrCE,GAAWR,KAAKQ,EAAWV,KAAM,gBAAmB,UAKtDhB,GAAoB,MAetBjB,EAAG4C,kCAEC7B","file":"admin.js","sourcesContent":["'use strict';\n\n(function ($) {\n    'use strict';\n\n    $(function () {\n\n        var $datepickers = $('.mcg-field-datepicker');\n\n        if ($datepickers.length) {\n\n            datepickers_init($datepickers);\n        }\n\n        /**\n         * Initializes datepickers.\n         *\n         * @since {{VERSION}}\n         *\n         * @param $datepickers\n         */\n        function datepickers_init($datepickers) {\n\n            $datepickers.each(function () {\n\n                var name = $(this).find('input[type=\"hidden\"]').attr('name'),\n                    option_functions = ['beforeShow', 'beforeShowDay', 'calculateWeek', 'onChangeMonthYear', 'onClose', 'onSelect'],\n                    options = {};\n\n                // Function support\n                $.each(options, function (name, value) {\n                    if (option_functions.indexOf(name) !== -1) {\n                        options[name] = window[value];\n                    }\n                });\n\n                options['altField'] = '[name=\"' + name + '\"]';\n                options['altFormat'] = 'yymmdd';\n\n                $(this).find('.mcg-field-datepicker-preview').datepicker(options);\n            });\n        }\n    });\n})(jQuery);\n'use strict';\n\n/**\n Allows media uploader to be used in the backend.\n\n @since 1.0.0\n */\n(function ($) {\n\t'use strict';\n\n\twindow['mcg_instantiate_media_uploaders'] = function () {\n\n\t\tvar media_frame, $current_uploader;\n\n\t\tif (!wp.media) {\n\t\t\treturn;\n\t\t}\n\n\t\tmedia_frame = wp.media.frames.meta_image_frame = wp.media({\n\t\t\ttitle: 'Choose Media'\n\t\t});\n\n\t\tmedia_frame.on('select', function () {\n\n\t\t\tvar media_attachment = media_frame.state().get('selection').first().toJSON();\n\n\t\t\t$current_uploader.find('.media-id').val(media_attachment.id);\n\n\t\t\t$current_uploader.find('.upload-media').hide();\n\t\t\t$current_uploader.find('.remove-media').show();\n\n\t\t\t// Preview\n\t\t\tswitch ($current_uploader.data('type')) {\n\t\t\t\tcase 'image':\n\t\t\t\t\t$current_uploader.find('.image-preview').attr('src', media_attachment.url);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t$current_uploader.find('.media-url').html(media_attachment.url);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\t$(document).on('click', '.mcg-media-uploader .upload-media', function (e) {\n\n\t\t\te.preventDefault();\n\n\t\t\t$current_uploader = $(this).closest('.mcg-media-uploader');\n\n\t\t\tvar type = $current_uploader.data('type');\n\n\t\t\tmedia_frame.open();\n\n\t\t\t// TODO Not currently working\n\t\t\t//media_frame.title = $current_uploader.data( 'title' );\n\t\t\t//media_frame.button = {text: $current_uploader.data( 'button-text' )};\n\t\t\t//\n\t\t\t//if (type && type !== 'any' ) {\n\t\t\t//    media_frame.library = {type: type};\n\t\t\t//}\n\t\t});\n\n\t\t$(document).on('click', '.mcg-media-uploader .remove-media', function (e) {\n\n\t\t\t$(this).siblings('.upload-media').show();\n\t\t\t$(this).hide();\n\t\t\t$(this).siblings('.media-id').val('');\n\n\t\t\t$current_uploader = $(this).closest('.mcg-media-uploader');\n\n\t\t\t// Reset preview\n\t\t\tswitch ($current_uploader.data('type')) {\n\t\t\t\tcase 'image':\n\n\t\t\t\t\tvar $image_preview = $(this).siblings('.image-preview');\n\t\t\t\t\t$image_preview.attr('src', $image_preview.data('placeholder') || '');\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tvar $media_url = $(this).siblings('.media-url');\n\t\t\t\t\t$media_url.html($media_url.data('placeholder') || '&nbsp;');\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t$current_uploader = false;\n\t\t});\n\t};\n\n\tfunction repeater_reset_uploader(e, $field) {\n\n\t\tvar $media_fields = $field.find('.mcg-field-media');\n\n\t\tif (!$media_fields.length) {\n\t\t\treturn;\n\t\t}\n\n\t\t$media_fields.find('.remove-media').click();\n\t}\n\n\t$(mcg_instantiate_media_uploaders);\n})(jQuery);","( function( $ ) {\n    'use strict';\n\n    $( function () {\n\n        var $datepickers = $( '.mcg-field-datepicker' );\n\n        if ( $datepickers.length ) {\n\n            datepickers_init( $datepickers );\n\t\t\t\n        }\n\n        /**\n         * Initializes datepickers.\n         *\n         * @since {{VERSION}}\n         *\n         * @param $datepickers\n         */\n        function datepickers_init( $datepickers ) {\n\n            $datepickers.each( function () {\n\n                var name = $( this ).find( 'input[type=\"hidden\"]' ).attr( 'name' ),\n                    option_functions = ['beforeShow', 'beforeShowDay', 'calculateWeek', 'onChangeMonthYear', 'onClose', 'onSelect'],\n                    options = {};\n\n                // Function support\n                $.each( options, function (name, value ) {\n                    if ( option_functions.indexOf( name ) !== -1 ) {\n                        options[ name ] = window[ value ];\n                    }\n                } );\n\n                options['altField'] = '[name=\"' + name + '\"]';\n                options['altFormat'] = 'yymmdd';\n\n                $( this ).find( '.mcg-field-datepicker-preview' ).datepicker( options );\n\t\t\t\t\n            } );\n\t\t\t\n        }\n\t\t\n    } );\n\t\n} )( jQuery );","/**\n Allows media uploader to be used in the backend.\n\n @since 1.0.0\n */\n( function( $ ) {\n\t'use strict';\n\n\twindow['mcg_instantiate_media_uploaders'] = function() {\n\n\t\tvar media_frame, $current_uploader;\n\n\t\tif ( ! wp.media ) {\n\t\t\treturn;\n\t\t}\n\n\t\tmedia_frame = wp.media.frames.meta_image_frame = wp.media( {\n\t\t\ttitle: 'Choose Media'\n\t\t} );\n\n\t\tmedia_frame.on( 'select', function () {\n\n\t\t\tvar media_attachment = media_frame.state().get( 'selection' ).first().toJSON();\n\n\t\t\t$current_uploader.find( '.media-id' ).val(media_attachment.id);\n\n\t\t\t$current_uploader.find( '.upload-media' ).hide();\n\t\t\t$current_uploader.find( '.remove-media' ).show();\n\n\t\t\t// Preview\n\t\t\tswitch ( $current_uploader.data( 'type' ) ) {\n\t\t\t\tcase 'image' :\n\t\t\t\t\t$current_uploader.find( '.image-preview' ).attr( 'src', media_attachment.url );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault :\n\t\t\t\t\t$current_uploader.find( '.media-url' ).html( media_attachment.url );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t} );\n\n\t\t$( document ).on( 'click', '.mcg-media-uploader .upload-media', function( e ) {\n\n\t\t\te.preventDefault();\n\n\t\t\t$current_uploader = $( this ).closest( '.mcg-media-uploader' );\n\n\t\t\tvar type = $current_uploader.data( 'type' );\n\n\t\t\tmedia_frame.open();\n\n\t\t\t// TODO Not currently working\n\t\t\t//media_frame.title = $current_uploader.data( 'title' );\n\t\t\t//media_frame.button = {text: $current_uploader.data( 'button-text' )};\n\t\t\t//\n\t\t\t//if (type && type !== 'any' ) {\n\t\t\t//    media_frame.library = {type: type};\n\t\t\t//}\n\t\t} );\n\n\t\t$( document ).on( 'click', '.mcg-media-uploader .remove-media', function( e ) {\n\n\t\t\t$( this ).siblings( '.upload-media' ).show();\n\t\t\t$( this ).hide();\n\t\t\t$( this ).siblings( '.media-id' ).val( '' );\n\n\t\t\t$current_uploader = $( this ).closest( '.mcg-media-uploader' );\n\n\t\t\t// Reset preview\n\t\t\tswitch ( $current_uploader.data( 'type' ) ) {\n\t\t\t\tcase 'image':\n\n\t\t\t\t\tvar $image_preview = $( this ).siblings( '.image-preview' );\n\t\t\t\t\t$image_preview.attr( 'src', $image_preview.data( 'placeholder' ) || '' );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tvar $media_url = $( this ).siblings( '.media-url' );\n\t\t\t\t\t$media_url.html($media_url.data( 'placeholder' ) || '&nbsp;' );\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t}\n\n\t\t\t$current_uploader = false;\n\t\t} );\n\t};\n\n\tfunction repeater_reset_uploader( e, $field ) {\n\n\t\tvar $media_fields = $field.find( '.mcg-field-media' );\n\n\t\tif ( ! $media_fields.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$media_fields.find( '.remove-media' ).click();\n\t}\n\n\t$( mcg_instantiate_media_uploaders );\n\n} )( jQuery );"]}